@page "/learnBlazor/lifecycle"

<h3>Lifecycle</h3>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

<div class="border">
    <_LifecycleChild></_LifecycleChild>
</div>

<hr />
@* logging every item in the list of string *@
@foreach (var item in EventType)
{   
    @item
    <hr />
}
@* Logging this shows that the OnInitialized method is rendered before the OnInitializedAsync *@

@code {

    private int currentCount = 0;

    // calling the list of string to log all of the events 
    List<string> EventType = new List<string>();

    // 
    private void IncrementCount()
    {
        currentCount++;
    }

    // intellisense should fill in the method when calling the oninitialized with protected override void. and the oninitialized async when writing protexted override Task.
    protected override void OnInitialized()
    {
        // add EventType.Add when oninitialized is called
        EventType.Add("OnInitialized is called");
    }

    protected override async Task OnInitializedAsync()
    {
        EventType.Add("OnInitializedAsync is called");
        // becuase its an async method, rmbr to add an await method with Task.delay 
        await Task.Delay(1500);
    }
}

@* lifecycle methods will be called inside both the parent and child components *@

@* when the lifecycle gets triggered, i want to display which lifecycle was called in which order *@

@* in order to do that, call a list of string and and log in it everytime a lifecycle is called *@

@* the first lifecycles to work on are OnInitialized and OnInitializedAsync *@